<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.DormitoryMapper">
    <resultMap id="dormitoryDetails" type="com.example.entity.DormitoryDetails">
        <result property="studentName" column="name"/>
        <result property="dormitoryName" column="dormitory_name"/>
        <result property="buildingName" column="building_name"/>
    </resultMap>
    <resultMap id="dormitoryDO" type="com.example.DO.DormitoryDO">
        <result column="did" property="DID"/>
        <result column="sid" property="SID"/>
    </resultMap>


    <insert id="insert" parameterType="java.util.List">
        insert into dormitory (sid,name,did,sex,address)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.SID},#{item.name},#{item.DID},#{item.sex},#{item.address})
        </foreach>
        ;
    </insert>

    <select id="menID" resultType="java.lang.Integer">
        select SID
        from dormitory
        where DID is null
          and sex = '1';
    </select>


    <select id="womenID" resultType="java.lang.Integer">
        select SID
        from dormitory
        where DID is null
          and sex = '2';
    </select>

    <update id="complement" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index">
            update dormitory set DID = #{item.DID} where SID = #{item.SID};
        </foreach>
    </update>

    <select id="capacityNow" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM dormitory
        WHERE did = #{did};
    </select>

    <select id="selectAll" resultMap="dormitoryDetails">
        SELECT d.`sid`, d.`name`, b.`dormitory_name`, b.`building_name`
        FROM dormitory AS d
        LEFT JOIN building AS b
        ON d.`did` = b.`did`
        <choose>
            <when test="order == 'sid' ">
                order by d.sid;
            </when>
            <when test="order == 'did' ">
                order by d.did;
            </when>
        </choose>
    </select>

    <delete id="deleteStudent" parameterType="java.util.List">
        delete from dormitory where SID in
        <foreach collection="list" item="item" open="(" close=");" separator=",">
            #{item.SID}
        </foreach>
    </delete>

    <select id="findDidBySid" parameterType="java.util.List" resultMap="dormitoryDO">
        select sid,did from dormitory
        <foreach collection="list" item="item" open="where sid in(" close=");" separator=",">
            #{item.SID}
        </foreach>

    </select>

    <insert id="initial" parameterType="java.util.List">
        insert into dormitory (sid,name,did,sex)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.SID},#{item.studentName},(SELECT did FROM building WHERE building_name=#{item.buildingName} AND
            dormitory_name=#{item.dormitoryName})
            ,(select sex from building WHERE building_name=#{item.buildingName} AND
            dormitory_name=#{item.dormitoryName}) )
        </foreach>
        ;
    </insert>

</mapper>